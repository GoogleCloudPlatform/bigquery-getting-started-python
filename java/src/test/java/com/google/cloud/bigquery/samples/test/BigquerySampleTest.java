package com.google.cloud.bigquery.samples.test;

import com.google.cloud.bigquery.samples.BigqueryUtils;
import com.google.gson.Gson;
import com.google.gson.JsonIOException;
import com.google.gson.JsonSyntaxException;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.nio.file.Path;
import java.nio.file.Paths;


/**
 * TODO: Insert description here. (generated by elibixby)
 */
public class BigquerySampleTest extends BigqueryUtils{

  protected static class Constants{
    private String projectId;
    private String datasetId;
    private String currentTableId;
    private String newTableId;
    private String gcsInputURI;
    private String gcsOutputURI;
    private String query;
    private Integer discoveryDocMaxAge;
    /**
     * @return the projectId
     */
    public String getProjectId() {
      return projectId;
    }
    /**
     * @return the datasetId
     */
    public String getDatasetId() {
      return datasetId;
    }
    /**
     * @return the currentTableId
     */
    public String getCurrentTableId() {
      return currentTableId;
    }
    /**
     * @return the newTableId
     */
    public String getNewTableId() {
      return newTableId;
    }
    /**
     * @return the gcsInputURI
     */
    public String getGcsInputURI() {
      return gcsInputURI;
    }
    /**
     * @return the gcsOutputURI
     */
    public String getGcsOutputURI() {
      return gcsOutputURI;
    }
    /**
     * @return the query
     */
    public String getQuery() {
      return query;
    }
    /**
     * @return the discoveryDocMaxAge
     */
    public Integer getDiscoveryDocMaxAge() {
      return discoveryDocMaxAge;
    }

  }


  protected static final Path RESOURCE_PATH = Paths.get(System.getProperty("user.dir"))
      .getParent().resolve("resources");
  
  protected static final File CONSTANTS_FILE = new File(RESOURCE_PATH.resolve("constants.json").toString());
  
  protected static Constants CONSTANTS = null ;
  
  protected BigquerySampleTest() throws JsonSyntaxException, JsonIOException, FileNotFoundException{
    if(CONSTANTS == null){
      CONSTANTS = (new Gson()).<Constants>fromJson(
          new FileReader(CONSTANTS_FILE),
          Constants.class);
      
    }
  }
  
  
  
}
